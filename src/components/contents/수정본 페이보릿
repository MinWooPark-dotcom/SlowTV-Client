// 수정본 페이보릿
import React, { useState } from "react";
import { Link, withRouter } from "react-router-dom";
// import SideContainer from "../../containers/SideContainer";
import FakeSideContainer from "../containers/FakeSideContainer";
import NavContainer from "../containers/NavContainer";
import ModalContainer from "../containers/ModalContainer";
import FavoritesEntry from "./FavoritesEntry";
import FavoriteEntryContainer from "../containers/FavoritesEntryContainer";
// import ThumbnailsContainer from "../../containers/ThumbnailsContainer";
// import HamburgerContainer from "../../containers/SideContainer";
import "../components/contents/Water.css";

// import { ICON_NAME } from "react-icons/TYPE
// 즐겨찾기 전 손가락, 별 둘 둥 하나 선택
import { AiOutlineLike } from "react-icons/ai";
import { BsStar } from "react-icons/bs";
// 즐겨찾기 후
import { AiFillLike } from "react-icons/ai";
import { BsStarFill } from "react-icons/bs";

const Favorites = ({
  id,
  handleOnClick,
  history,
  isClicked,
  isModalClicked,
  // handleOnClickModal,
  videoData,
  clickThumbnail,
  addFavorites,
  isAddFavoirtes,
  isLoggedIn,
}) => {
  console.log("🚀 ~ file: Favorites.js ~ line 31 ~ videoData", videoData);
  // ! 썸네일 클릭 시 비디오 아이디 구하기 -> 비디오 플레이어에서 해당 아이디 영상 재생
  const getVideoId = (e) => {
    const id = e.target.attributes.value.value;
    console.log("🚀 ~ file: Water.js ~ line 36 ~ getVideoId ~ id", id);
    clickThumbnail(id);
  };
  return (
    <div className="water_page">
      {/* //! 비디오 데이터 없으면 */}
      {!videoData ? (
        isLoggedIn ? (
          <div className="loaded_water_page">
            <NavContainer />
            <FakeSideContainer />
            {isModalClicked ? <ModalContainer /> : <div></div>}
            <div>아직 추가한 즐겨찾기가 없습니다.</div>
          </div>
        ) : (
          <div className="loaded_water_page">
            <NavContainer />
            <FakeSideContainer />
            {isModalClicked ? <ModalContainer /> : <div></div>}
            <div>로그인 후 이용해 주세요.</div>
          </div>
        )
      ) : (
        videoData.map((video) => {
          <FavoritesEntry key={video.id} video={video} />;
          // <FavoriteEntryContainer key={video.id} video={video} />;
        })
      )}
    </div>
  );
};

export default withRouter(Favorites);
